{"version":3,"sources":["Components/ProductsBody/ProductsBody.js","Components/Filter/filter.js","Components/Navbar/Navbar/Nav.js","Components/Navbar/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ProductsBody","item","className","Title","src","image","alt","Price","Description","Filter","props","handlePriceDropDownSelect","event","setState","price","target","value","type","state","this","onChange","data","map","React","Component","Nav","width","height","href","Footer","rel","ProductList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"s7GAgBeA,G,KAbM,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACnB,6BACE,yBAAKC,UAAU,WACf,4BAAKD,EAAKE,OACV,yBAAKD,UAAU,gBAAgBE,IAAMH,EAAKI,MAAOC,IAAKL,EAAKK,MAC3D,4BAAKL,EAAKM,OACV,2BAAIN,EAAKO,aACT,4BAAQN,UAAU,OAAlB,mBC2DWO,E,kDA/DP,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,0BAA4B,SAACC,GACzB,EAAKC,SAAS,CACVC,MAAOF,EAAMG,OAAOC,MACpBC,KAAML,EAAMG,OAAOC,SATvB,EAAKE,MAAQ,CACTD,KAAK,UACLH,MAAM,WAJI,E,qDAmBZ,IAAD,EACmBK,KAAKD,MAArBD,EADH,EACGA,KAAMH,EADT,EACSA,MACd,OACI,6BACA,yBAAKZ,UAAU,kBACf,wBAAIA,UAAU,YAAd,oBAEI,6BAASA,UAAU,oBACf,6CACA,4BAAQc,MAAOC,EAAMG,SAAUD,KAAKR,2BAChC,4BAAQK,MAAM,WAAd,YACA,4BAAQA,MAAM,UAAd,YACA,4BAAQA,MAAM,eAAd,gBAEJ,8CACA,4BAAQA,MAAOF,EAAOM,SAAUD,KAAKR,2BACjC,4BAAQK,MAAM,WAAd,YACA,4BAAQA,MAAM,cAAd,YACA,4BAAQA,MAAM,gBAAd,gBAKZ,yBAAKd,UAAU,aACjBmB,EAAKC,KAAI,SAACrB,GACV,MAAa,YAATgB,GAAiC,YAAVH,GAEhBG,IAAShB,EAAKgB,MAAQH,IAAUb,EAAKa,OAErCG,IAAShB,EAAKgB,MAAQH,IAAUb,EAAKa,OAE5B,YAATG,GAAiC,YAAVH,EALzB,kBAAC,EAAD,CAAcb,KAAMA,SAKtB,W,GAnDIsB,IAAMC,WCgBZC,G,6KAfP,OACI,yBAAKvB,UAAU,UACX,yBAAKA,UAAU,OAAOE,IAAK,2BAA2BsB,MAAM,MAAMC,OAAO,MAAMrB,IAAI,eACnF,6BACA,wBAAIJ,UAAU,aACV,4BAAI,uBAAG0B,KAAK,uBAAR,QAAJ,KACA,4BAAI,uBAAG1B,UAAU,UAAU0B,KAAK,iBAA5B,aACJ,4BAAI,uBAAGA,KAAK,yBAAR,mB,GATNL,IAAMC,YCyBTK,G,6KAtBP,OACI,6BAEZ,gCAEA,gEAGI,wBAAI3B,UAAU,gBACV,4BAAI,uBAAGa,OAAO,SAASe,IAAI,sBAAsBF,KAAK,2BAA0B,yBAAKxB,IAAI,0HAA0HE,IAAI,oBACvN,4BAAI,uBAAGS,OAAO,SAASe,IAAI,sBAAuBF,KAAK,8BAA6B,yBAAKxB,IAAI,+EAA+EE,IAAI,4B,GAZnKiB,IAAMC,YCqBZO,G,6KAfX,OAEA,yBAAK7B,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPoBqB,IAAMC,YCGZQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.423d3424.chunk.js","sourcesContent":["import React from 'react';\nimport '../../Components/data/data.css'\n\nconst ProductsBody = ({item}) =>(\n  <div>\n    <div className=\"gallery\">\n    <h1>{item.Title}</h1>\n    <img className=\"gallery_image\" src= {item.image} alt={item.alt}/>\n    <h2>{item.Price}</h2>\n    <p>{item.Description}</p>\n    <button className=\"buy\">Add to Cart</button>\n    </div>\n  </div>\n\n)\n\nexport default ProductsBody;","import React from 'react';\nimport data from '../data/products.json';\nimport ProductsBody from '../ProductsBody/ProductsBody'\nimport '../../Components/data/data.css'\n\nclass Filter extends React.Component {\n        constructor(props){\n            super(props)\n            this.state = {\n                type:'default',\n                price:'default'\n            }\n        }\n     //Event Handler Targetting the Value of the Price and Type\n        handlePriceDropDownSelect = (event) => {\n            this.setState({\n                price: event.target.value,\n                type: event.target.value\n\n            })\n        }\n\n\n     // Const  Type and Price is equal to \n\n    render() {\n        const { type, price } = this.state;\n        return(\n            <div>\n            <div className=\"product-header\">\n            <h1 className=\"headline\">Summer Catalog </h1>\n            </div>\n                <section className=\"button-container\">\n                    <p>Fliter by Type</p>\n                    <select value={type} onChange={this.handlePriceDropDownSelect}>\n                        <option value=\"default\">Show All</option>\n                        <option value=\"shirts\">T-Shirts</option>\n                        <option value=\"accessories\">Accessories</option>\n                    </select>\n                    <p>Filter by Price</p>\n                    <select value={price} onChange={this.handlePriceDropDownSelect}>\n                        <option value=\"default\">Show All</option>\n                        <option value=\"price0to50\">$0 - $50</option>\n                        <option value=\"price50to100\">$50 - $100</option>\n                       \n                </select>\n\n            </section>\n            <div className=\"container\">\n         {data.map((item) => {\n          if (type === 'default' &&  price === 'default') {\n            return <ProductsBody item={item}/>\n          } else if (type === item.type && price === item.price) {\n            return <ProductsBody item={item} />\n          } else if (type === item.type || price === item.price) {\n            return <ProductsBody item={item} />\n          } else if (type === 'default' ||  price === 'default') {\n            return <ProductsBody item={item} />\n          }\n         })}\n\n\n            </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Filter;","import React from 'react'\nimport '/Users/nathanyordanostadesse/Desktop/ecommerceproject/src/Components/Navbar/Navbar/nav.css'\n\n\nclass Nav extends React.Component {\n    render() {\n        return(\n            <div className=\"header\">\n                <img className=\"logo\" src= '../images/kleco-logo.jpg' width=\"100\" height=\"100\" alt=\"kleco-logo\"/>\n                <nav>\n                <ul className=\"kleco-nav\">\n                    <li><a href=\"../pages/index.html\">Home</a> </li>\n                    <li><a className=\"current\" href=\"products.html\">Products</a></li>\n                    <li><a href=\"../pages/contact.html\">Contact</a></li>\n                </ul>\n            </nav>\n\n            </div>\n        )\n    }\n}\nexport default Nav;","import React from 'react'\nimport '/Users/nathanyordanostadesse/Desktop/ecommerceproject/src/Components/Navbar/Footer/Footer.css'\n\n\n\nclass Footer extends React.Component {\n    render() {\n        return(\n            <div>\n\n<footer>\n\n<p>Kleco Clothing Worldwide&copy; 2020</p>\n\n\n    <ul className=\"social-logos\">\n        <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.facebook.com\"><img src=\"https://i1.wp.com/hipstory.org/wp-content/uploads/2016/01/transparent-facebook-logo-icon1-1024x1024.png?fit=1024%2C1024\" alt=\"facebook icon\"/></a></li>\n        <li><a target=\"_blank\" rel=\"noopener noreferrer\"  href=\"https://www.instagram.com/\"><img src=\"https://i.pinimg.com/originals/69/68/69/69686902815d4ca58040d21bff5f1b67.png\" alt=\"instagram icon\"/></a></li>\n      </ul>\n   \n\n\n</footer>\n                \n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React  from 'react';\nimport Filter from './Components/Filter/filter'\nimport Nav from './Components/Navbar/Navbar/Nav'\nimport Footer from './Components/Navbar/Footer/Footer'\nimport './App.css'\n\n\n\n\nclass ProductList extends React.Component {\n  render(){\n    return(\n\n    <div className=\"body\">\n      <Nav />\n      <Filter />\n      <Footer />\n    </div>\n\n    );\n\n    \n    }\n  \n}\n\nexport default ProductList;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}